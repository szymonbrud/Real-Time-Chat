{"version":3,"sources":["assets/styles/theme.ts","assets/styles/globalStyles.tsx","context/joinContext/index.tsx","components/LoginInput/styles.ts","components/LoginInput/index.tsx","pages/LoginPage/hooks.ts","pages/LoginPage/styles.ts","pages/ChatPage/hooks.ts","pages/LoginPage/index.tsx","pages/ChatPage/styles.ts","pages/ChatPage/index.tsx","App.tsx","index.tsx"],"names":["colors","background","blue","inputPlaceholder","fonts","mono","roboto","GlobalStyle","createGlobalStyle","GlobalStyleProvider","children","theme","defaultContext","username","room","setUsername","setRoom","setUsernameAndRoom","joinContext","React","createContext","JoinContextProvider","initalState","setState","state","useState","Provider","value","Input","styled","input","isError","css","ErrorText","p","LoginInput","refProps","placeholder","ref","useValidationInputs","inputUsername","inputRoom","isErrorUsername","setIsErrorUsername","isErrorRoom","setIsErrorRoom","isPassed","setIsPassed","useContext","validationInputs","current","inputUsernameValue","inputRoomvalue","length","socket","URL","Background","section","backgorund","Text","AcceptButton","button","LoginPage","useRef","to","onClick","window","location","hostname","useChatConnection","textInputRef","messageWrapperRef","messages","setMessages","isRedirect","setIsRedirect","useEffect","io","emit","name","error","alert","on","user","text","message","isReceived","sender","sendMessage","textInputRefValue","scrollTop","scrollHeight","triggerSend","e","keyCode","messageAnimationRight","keyframes","messageAnimationLeft","MainWrapper","MessagesMainWrapper","div","MessagesWrapper","SenderWrapper","MessageSenderInput","SendButton","Message","isRight","ChatPage","map","index","console","log","onKeyUp","SendRounded","style","fontSize","color","grey","marginLeft","App","exact","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7cfb4a39.chunk.js","sourcesContent":["export default {\r\n  colors: {\r\n    background: '#F1F1F1',\r\n    blue: '#6E82EE',\r\n    inputPlaceholder: '#A4A4A4',\r\n  },\r\n  fonts: {\r\n    mono: \"'Roboto Mono', monospace;\",\r\n    roboto: \"'Roboto', sans-serif;\",\r\n  },\r\n};\r\n","import React from 'react';\r\nimport { ThemeProvider, createGlobalStyle } from 'styled-components';\r\nimport theme from './theme';\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n  \r\n  @font-face{\r\n    font-family: 'Roboto', sans-serif;\r\n    src: url('https://fonts.googleapis.com/css2?family=Roboto+Mono:wght@400;500;600;700&family=Roboto:wght@400;500;700&display=swap');\r\n  }\r\n\r\n  *, *::after, *::before{\r\n    box-sizing: border-box;\r\n    -webkit-font-smoothing: antialiased;\r\n    -moz-osx-font-smoothing: grayscale;\r\n  }\r\n\r\n  html{\r\n    font-size: 62.5%;\r\n  }\r\n\r\n  body{\r\n    font-size: 1.6rem;\r\n    margin: 0;\r\n    font-family: 'Roboto', sans-serif;\r\n    /* width: auto; */\r\n  }\r\n`;\r\n\r\nconst GlobalStyleProvider = ({ children }: { children: JSX.Element }) => (\r\n  <>\r\n    <GlobalStyle />\r\n    <ThemeProvider theme={theme}>{children}</ThemeProvider>\r\n  </>\r\n);\r\n\r\nexport default GlobalStyleProvider;\r\n","import React, { useState } from 'react';\r\n\r\ninterface defaultContextValidation {\r\n  username: string;\r\n  room: string;\r\n  setUsername: Function;\r\n  setRoom: Function;\r\n  setUsernameAndRoom: Function;\r\n}\r\n\r\nconst defaultContext: defaultContextValidation = {\r\n  username: '',\r\n  room: '',\r\n  setUsername: () => {},\r\n  setRoom: () => {},\r\n  setUsernameAndRoom: () => {},\r\n};\r\n\r\nexport const joinContext = React.createContext(defaultContext);\r\n\r\nexport const JoinContextProvider = ({ children }: { children: React.ReactNode }) => {\r\n  const setRoom = (room: string) => {\r\n    setState({ ...state, room });\r\n  };\r\n\r\n  const setUsername = (username: string) => {\r\n    setState({ ...state, username });\r\n  };\r\n\r\n  const setUsernameAndRoom = (username: string, room: string) => {\r\n    setState({ ...state, username, room });\r\n  };\r\n\r\n  const initalState = {\r\n    ...defaultContext,\r\n    setRoom,\r\n    setUsername,\r\n    setUsernameAndRoom,\r\n  };\r\n\r\n  const [state, setState] = useState(initalState);\r\n\r\n  return <joinContext.Provider value={state}>{children}</joinContext.Provider>;\r\n};\r\n","import styled, { css } from 'styled-components';\r\n\r\nexport const Input = styled.input`\r\n  border-radius: 5px;\r\n  border: ${({ theme }) => theme.colors.blue} 2px solid;\r\n  font-size: 20px;\r\n  padding: 0 16px;\r\n  width: 235px;\r\n  height: 49px;\r\n  margin-top: 27px;\r\n\r\n  ::placeholder {\r\n    color: ${({ theme }) => theme.colors.inputPlaceholder};\r\n  }\r\n\r\n  ${({ isError }: { isError: boolean }) =>\r\n    isError &&\r\n    css`\r\n      border: red 2px solid;\r\n    `}\r\n`;\r\n\r\nexport const ErrorText = styled.p`\r\n  margin: 5px 0 0 0;\r\n  width: 235px;\r\n  color: red;\r\n`;\r\n","import React, { RefObject } from 'react';\r\n\r\nimport { Input, ErrorText } from './styles';\r\n\r\ntype LoginInputProps = {\r\n  refProps: RefObject<HTMLInputElement>;\r\n  isError?: boolean;\r\n  placeholder?: string;\r\n};\r\n\r\nconst LoginInput = ({ refProps, isError = false, placeholder }: LoginInputProps) => (\r\n  <>\r\n    <Input ref={refProps} placeholder={placeholder} isError={isError} />\r\n    {isError && <ErrorText>Błąd!</ErrorText>}\r\n  </>\r\n);\r\n\r\nexport default LoginInput;\r\n","import { useState, useContext, RefObject } from 'react';\r\nimport { joinContext } from 'context/joinContext';\r\n\r\nconst useValidationInputs = (\r\n  inputUsername: RefObject<HTMLInputElement>,\r\n  inputRoom: RefObject<HTMLInputElement>,\r\n) => {\r\n  const [isErrorUsername, setIsErrorUsername] = useState(false);\r\n  const [isErrorRoom, setIsErrorRoom] = useState(false);\r\n\r\n  const [isPassed, setIsPassed] = useState(false);\r\n\r\n  const { setUsernameAndRoom } = useContext(joinContext);\r\n\r\n  const validationInputs = () => {\r\n    if (inputUsername.current && inputRoom.current) {\r\n      const inputUsernameValue = inputUsername.current.value;\r\n      const inputRoomvalue = inputRoom.current.value;\r\n\r\n      if (inputUsernameValue.length === 0) {\r\n        setIsErrorUsername(true);\r\n        return;\r\n      } else {\r\n        setIsErrorUsername(false);\r\n      }\r\n\r\n      if (inputRoomvalue.length === 0) {\r\n        setIsErrorRoom(true);\r\n        return;\r\n      } else {\r\n        setIsErrorRoom(false);\r\n      }\r\n\r\n      setUsernameAndRoom(inputUsernameValue, inputRoomvalue);\r\n      setIsPassed(true);\r\n    }\r\n  };\r\n\r\n  return { isErrorUsername, isErrorRoom, isPassed, validationInputs };\r\n};\r\n\r\nexport default useValidationInputs;\r\n","import styled from 'styled-components';\r\n\r\nexport const Background = styled.section`\r\n  background: ${({ theme }) => theme.colors.backgorund};\r\n  width: 100%;\r\n  height: 100vh;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  flex-direction: column;\r\n`;\r\n\r\nexport const Text = styled.p`\r\n  font-size: 30px;\r\n  text-align: center;\r\n  font-family: ${({ theme }) => theme.fonts.mono};\r\n  font-weight: 600;\r\n  margin: 0 0 100px;\r\n`;\r\n\r\nexport const AcceptButton = styled.button`\r\n  border-radius: 5px;\r\n  background: ${({ theme }) => theme.colors.blue};\r\n  color: white;\r\n  font-size: 20px;\r\n  margin-top: 54px;\r\n  width: 147px;\r\n  height: 48px;\r\n  border: none;\r\n\r\n  cursor: pointer;\r\n`;\r\n","import { useEffect, useContext, useState, useRef, RefObject } from 'react';\r\nimport io from 'socket.io-client';\r\n\r\nimport { joinContext } from 'context/joinContext';\r\n\r\ninterface messageObject {\r\n  isReceived: boolean;\r\n  sender: string;\r\n  text: string;\r\n}\r\n\r\nlet socket: any;\r\nlet URL: string;\r\n\r\nif (window.location.hostname === 'localhost') {\r\n  URL = 'http://localhost:5500/';\r\n} else {\r\n  URL = 'https://real-time-chat-backend.herokuapp.com/';\r\n}\r\n\r\nconst useChatConnection = () => {\r\n  const { username, room } = useContext(joinContext);\r\n\r\n  const textInputRef: RefObject<HTMLInputElement> = useRef(null);\r\n  const messageWrapperRef: RefObject<HTMLDivElement> = useRef(null);\r\n\r\n  const [messages, setMessages] = useState<messageObject[]>([]);\r\n  const [isRedirect, setIsRedirect] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (username === '' || room === '') setIsRedirect(true);\r\n\r\n    socket = io(URL);\r\n    socket.emit('join', { name: username, room }, (error: any) => {\r\n      if (error) {\r\n        alert(error);\r\n        setIsRedirect(true);\r\n      }\r\n    });\r\n\r\n    socket.on('message', ({ user, text }: { user: string; text: string }) => {\r\n      setMessages((message) => [...message, { isReceived: true, sender: user, text }]);\r\n    });\r\n  }, []);\r\n\r\n  const sendMessage = () => {\r\n    if (textInputRef.current && textInputRef.current.value !== '') {\r\n      const textInputRefValue = textInputRef.current.value;\r\n\r\n      socket.emit('sendMessage', { text: textInputRefValue }, () => {});\r\n      setMessages((message) => [\r\n        ...message,\r\n        { isReceived: false, sender: username, text: textInputRefValue },\r\n      ]);\r\n\r\n      textInputRef.current.value = '';\r\n    }\r\n  };\r\n\r\n  const triggerSend = (e: any) => {\r\n    if (e.keyCode === 13) {\r\n      sendMessage();\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (messageWrapperRef.current) {\r\n      messageWrapperRef.current.scrollTop = messageWrapperRef.current.scrollHeight;\r\n    }\r\n  }, [messages]);\r\n\r\n  return { messages, textInputRef, sendMessage, triggerSend, isRedirect, messageWrapperRef };\r\n};\r\n\r\nexport default useChatConnection;\r\n","import React, { useRef } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nimport LoginInput from 'components/LoginInput';\r\n\r\nimport useValidationInputs from './hooks';\r\nimport { Background, Text, AcceptButton } from './styles';\r\n\r\nconst LoginPage = () => {\r\n  const inputUsername = useRef<HTMLInputElement>(null);\r\n  const inputRoom = useRef<HTMLInputElement>(null);\r\n\r\n  const { isErrorUsername, isErrorRoom, isPassed, validationInputs } = useValidationInputs(\r\n    inputUsername,\r\n    inputRoom,\r\n  );\r\n\r\n  if (isPassed) {\r\n    return <Redirect to=\"/room\" />;\r\n  }\r\n\r\n  return (\r\n    <Background>\r\n      <Text>Stwórz nowy pokój lub dołącz</Text>\r\n      <LoginInput refProps={inputUsername} placeholder=\"nazwa\" isError={isErrorUsername} />\r\n      <LoginInput refProps={inputRoom} placeholder=\"pokój\" isError={isErrorRoom} />\r\n      <AcceptButton onClick={validationInputs}>gotowe</AcceptButton>\r\n    </Background>\r\n  );\r\n};\r\n\r\nexport default LoginPage;\r\n","import styled, { css, keyframes } from 'styled-components';\r\n\r\nconst messageAnimationRight = keyframes`\r\n  from {\r\n    transform: translateX(100%);\r\n  }\r\n\r\n  to{\r\n    transform: translateX(0);\r\n  }\r\n`;\r\n\r\nconst messageAnimationLeft = keyframes`\r\n  from {\r\n    transform: translateX(-100%);\r\n  }\r\n\r\n  to{\r\n    transform: translateX(0);\r\n  }\r\n`;\r\n\r\nexport const MainWrapper = styled.section`\r\n  width: 100%;\r\n  height: 100vh;\r\n  background: ${({ theme }) => theme.colors.background};\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nexport const MessagesMainWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 100%;\r\n\r\n  @media (min-width: 865px) {\r\n    display: block;\r\n    width: auto;\r\n  }\r\n`;\r\n\r\nexport const MessagesWrapper = styled.div`\r\n  width: 100%;\r\n  height: 85vh;\r\n\r\n  @media (min-width: 865px) {\r\n    width: 445px;\r\n    height: 431px;\r\n  }\r\n\r\n  background: white;\r\n  border-radius: 6px;\r\n  margin-bottom: 31px;\r\n  overflow-y: auto;\r\n  overflow-x: hidden;\r\n  padding-bottom: 20px;\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: flex-start;\r\n`;\r\n\r\nexport const SenderWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\n\r\nexport const MessageSenderInput = styled.input`\r\n  width: 74%;\r\n  margin-bottom: 20px;\r\n\r\n  @media (min-width: 865px) {\r\n    width: 370px;\r\n    height: 49px;\r\n  }\r\n\r\n  height: 49px;\r\n  border-radius: 5px;\r\n  border: ${({ theme }) => theme.colors.blue} 2px solid;\r\n  font-size: 20px;\r\n  padding: 0 16px;\r\n  background: white;\r\n\r\n  ::placeholder {\r\n    color: ${({ theme }) => theme.colors.inputPlaceholder};\r\n  }\r\n`;\r\n\r\nexport const SendButton = styled.button`\r\n  margin-left: 26px;\r\n  width: 49px;\r\n  height: 49px;\r\n  border: none;\r\n  border-radius: 5px;\r\n  background: ${({ theme }) => theme.colors.blue};\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n  cursor: pointer;\r\n`;\r\n\r\nexport const Message = styled.div`\r\n  min-width: 50px;\r\n  position: relative;\r\n  margin: 40px 16px 0;\r\n  display: flex;\r\n  align-items: center;\r\n  font-size: 15px;\r\n\r\n  ::before {\r\n    position: absolute;\r\n    top: -1px;\r\n    transform: translateY(-100%);\r\n    color: rgba(0, 0, 0, 0.7);\r\n    font-size: 13px;\r\n  }\r\n\r\n  ${({ isRight, username }: { isRight?: boolean; username: string }) =>\r\n    !isRight\r\n      ? css`\r\n          animation: ${messageAnimationRight} 0.2s linear;\r\n          animation-timing-function: cubic-bezier(0.9, 0.23, 0.11, 1.84);\r\n          align-self: flex-end;\r\n          background: ${({ theme }) => theme.colors.background};\r\n          border-radius: 5px 5px 0 5px;\r\n\r\n          padding: 8px 10px 8px 15px;\r\n\r\n          ::before {\r\n            content: \"${username}\";\r\n            right: 0;\r\n          }\r\n        `\r\n      : css`\r\n          animation: ${messageAnimationLeft} 0.2s linear;\r\n          animation-timing-function: cubic-bezier(0.9, 0.23, 0.11, 1.84);\r\n          align-self: flex-start;\r\n          background: ${({ theme }) => theme.colors.blue};\r\n          border-radius: 5px 5px 5px 0;\r\n          padding: 8px 15px 8px 10px;\r\n          color: white;\r\n\r\n          ::before {\r\n            content: \"${username}\";\r\n            left: 0;\r\n          }\r\n        `};\r\n`;\r\n","import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { SendRounded } from '@material-ui/icons';\r\nimport { grey } from '@material-ui/core/colors';\r\n\r\nimport useChatConnection from './hooks';\r\nimport {\r\n  MainWrapper,\r\n  MessageSenderInput,\r\n  MessagesMainWrapper,\r\n  MessagesWrapper,\r\n  SendButton,\r\n  SenderWrapper,\r\n  Message,\r\n} from './styles';\r\n\r\nconst ChatPage = () => {\r\n  const {\r\n    messages,\r\n    textInputRef,\r\n    sendMessage,\r\n    triggerSend,\r\n    isRedirect,\r\n    messageWrapperRef,\r\n  } = useChatConnection();\r\n\r\n  if (isRedirect) {\r\n    return <Redirect to=\"/\" />;\r\n  }\r\n\r\n  return (\r\n    <MainWrapper>\r\n      <MessagesMainWrapper>\r\n        <MessagesWrapper ref={messageWrapperRef}>\r\n          {messages.map(({ isReceived, sender, text }, index) => {\r\n            console.log(messages.length, index);\r\n            return (\r\n              <Message isRight={isReceived} username={sender}>\r\n                {text}\r\n              </Message>\r\n            );\r\n          })}\r\n        </MessagesWrapper>\r\n        <SenderWrapper>\r\n          <MessageSenderInput\r\n            placeholder=\"napisz coś...\"\r\n            ref={textInputRef}\r\n            onKeyUp={(e) => triggerSend(e)}\r\n          />\r\n          <SendButton onClick={sendMessage}>\r\n            <SendRounded style={{ fontSize: 24, color: grey[50], marginLeft: 1 }} />\r\n          </SendButton>\r\n        </SenderWrapper>\r\n      </MessagesMainWrapper>\r\n    </MainWrapper>\r\n  );\r\n};\r\n\r\nexport default ChatPage;\r\n","import React from 'react';\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\nimport GlobalStyleProvider from 'assets/styles/globalStyles';\r\n\r\nimport { JoinContextProvider } from 'context/joinContext';\r\nimport LoginPage from 'pages/LoginPage';\r\nimport ChatPage from 'pages/ChatPage';\r\n\r\nconst App = () => (\r\n  <GlobalStyleProvider>\r\n    <JoinContextProvider>\r\n      <Router>\r\n        <Switch>\r\n          <Route exact path=\"/\" component={LoginPage} />\r\n          <Route path=\"/room\" component={ChatPage} />\r\n        </Switch>\r\n      </Router>\r\n    </JoinContextProvider>\r\n  </GlobalStyleProvider>\r\n);\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}